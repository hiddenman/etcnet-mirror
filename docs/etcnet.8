.TH "etcnet" "8" "0.8.0" "Denis Ovsienko <info@etcnet.org>" "Linux network configuration"
.SH "NAME"
/etc/net \- configuring network in Linux
.SH "SYNOPSIS"
.TP 
ifup <interface>
.TP 
ifdown <interface>
.TP 
service network <start|stop|restart|reload...>
.SH "DESCRIPTION"
/etc/net is a network configuration system. It should be both simple to use for a beginner and powerful for expert. First of all you have to describe your network connection(s) in a set of files. Once you are done, you should be able to control state of your host with 3 scripts: ifup, ifdown, network.init.
.SH "SYSTEM CONFIGURATION"
/etc/net ships in default configuration, which is suitable for many cases. Linux distributions can customize default installation even further, but there are things that only you can configure. /etc/net keeps its configuration in files, most of which reside in /etc/net (literally) directory.
.IP "/etc/net/options.d"
This directory by default keeps 00\-default file.
.IP /etc/net/sysctl.conf
sysctl startup file
.IP "/etc/net/ipv4rule ???"
ip rules startup table ('ip \-4 rule add' args)
.IP /etc/net/vlantab
VLAN mass\-configuration table. If you need to configure lots of simple VLAN interfaces, this is the right place. See VLANTAB SYNTAX for details.
.IP /etc/net/iftab
Interface mappings table, optional, but hardly advised to have. This file is used by ifrename. iftab file format is described in iftab manpage. Please note that we don't use /etc/iftab, but keep our own /etc/net/iftab. This difference allows to keep /etc/net\-specific filenames with profile and host suffixes under a single directory without creating additional mess in /etc. Additionally it prevents the system from accidental interface name change after ifrename invocation.
.IP /etc/net/hosttab
This optional file can be used during MULTIHOST CONFIGURATION.
.SH "INTERFACE CONFIGURATION"

.SH "INTERFACE GROUPS"
There are 5 interface groups in /etc/net model:
.IP "virtual"
Self\-consistent interfaces, currently loopback and dummy. They very seldom require other interfaces and require no hardware, therefore chances are high to bring them up.
.IP "real physical"
Interfaces, corresponding to real hardware% pure Ethernet, PLIP, USB Ethernet adapters and DVB. You cannot bring them up, if there is no hardware present.
.IP "hosted physical"
Something between physical and logical type. This group includes: VLAN, bonding, bridges and traffic equalizers. These interfaces don't directly use hardware, but are built from one ore more 'host' real physical interfaces. If host interface is missing, hosted interfaces can't be brought up.
.IP "independent logical"
This group includes IP and IPSec tunnels. Tunnels are stateless, they are much like virtual group, but sometimes they depend on lower\-level interfaces indirectly.
.IP "dependent logical"
This group currently consists of PPP interfaces, including PPPoE/PPtP ones. Their well known property is to disconnect on timeouts, so this group has the most chances to fail.
.LP 
When network is being started, /etc/net puts interfaces in appropriate group and processes groups from virtual to dependent logical. When network is being stopped, groups are processed in reverse order. This order results in less failures, than simple processing from A to Z. You don't have to specify interface group anywhere, it is computed from interface type.
.SH "INTERFACE DIRECTORY LAYOUT"
Unless explicitly stated, each configuration file contains 1 item per line (options, addresses, routes etc.). You have to create files for each feature you want to use. If file is missing, the feature will not be configured.
.IP options
Main options file. This file is required. See etcnet\-options manpage for list of options available.
.IP iplink
List of 'ip link' commands. If you need to change interface MTU or PROMISC flag, this is the right place to do it. This file is not required.
.IP ipneigh
List of 'ip ne' commands, can be used to control ARP table, e.g. add static ARP entries. This file is not required.
.IP ipv4address
List of IPv4 addresses for current interface. This file is not required, but often used.
.IP ipv4route
List of IPv4 routes for current interface. This file is not required, but often used.
.IP ipv4rule
List of IPv4 routing rules for current interface. You will need this file only if you install routes into multiple routing tables. This file is not required.
.IP ipv6address
List of IPv6 addresses for current interface. This file is not required.
.IP ipv6route
List of IPv6 routes for current interface. This file is not required.
.IP iwconfig
List of iwconfig commands. This file is only required for WiFi WEP.
.IP wpa_supplicant.conf
wpa_supplicant configuration file. This file is only required for WiFi WPA.
.IP brctl
List of brctl commands. This file is only used by bridges and is not required.
.IP ipx_interface
List of 'ipx_interface add' arguments. This file is required for IPX interfaces.
.IP sysctl.conf
List of sysctl options, which will be processed after interface is up. Unlike traditional sysctl.conf files, where you have to specify the full path to sysctl variables, in this file you can use short variable names. E.g. to enable forwarding on current interface, you can use forwarding=1 and to disable return path filtering you can use rp_filter=0. /etc/net will automatically find appropriate prefixes for all variables. This file is optional.
.IP resolv.conf
Resolver configuration. This file will be copied to /etc/resolv.conf after interface is up. This file is optional.
.IP ifup\-pre\-local
If exists and is executable, is run before interface is up, but after it is created.
.IP ifup\-post\-local
If exists and is executable, is run after the interface is completely up and running.
.IP ifdown\-pre\-local
If exists and is executable, is run before the interface is going to be shutdown.
.IP ifdown\-post\-local
If exists and is executable, is run after the interface is completely gone.
.SH "SPECIAL INTERFACES"
/etc/net ships with 3 existing interfaces:
.IP lo
This is a must for a Linux host. Loopback interface comes in configuration, suitable for most cases.
.IP default
This is really not an interface, but interface template. 'default' interface forms initial set of options for all interfaces and it doesn't belong to any interface group. This interface allows placing an additional options file into configuration directory: options\-<TYPE>. This optional file has effect ONLY for 'default' interface, it allows to override default options with type\-specific options.
It is not recommended to change options for 'default' interface. Each interface can add extra options or override existing options, if needed.
.IP unknown
This is a special interface, which is used each time /etc/net can't find a suitable configuration, but is requested to do. This interface's purpose is to help configure hotplug interfaces, which don't yet have a configuration.
.SH "VLANTAB SYNTAX"
For each VLAN interface you have to add a line:
.IP "<host interface> <VLAN ID>"
Create VLAN interface and automatically name it according to VLAN_NAMETYPE option value.
.IP "<host interface> <VLAN ID> <VLAN interface name>"
Create VLAN interface with specified name.
.IP "<host interface> <VLAN ID> <VLAN interface name> <'ip address' arguments>"
Create VLAN interface with specified name and run 'ip address' with specified arguments.
.SH "HOSTTAB SYNTAX"
This file holds aliases for hostnames. If your hostname is long or unconvinient, you can define an alias here. This alias can be used for tagging files. One hostname should be referenced by one alias only. File format:

<hostname1><space><alias1>.br 
<hostname2><space><alias2>.br 
<hostname3><space><alias3>.br 
<hostname4><space><alias4>.br 
<hostname5><space><alias5>.br 
.SH "FILENAMES"
When a need to read certain file or check for its existence arises, several naming conventions are taken in account. If neither "network profile" nor "network host" are defined, /etc/net leaves filename unchanged.
.SH "CONFIGURATION PROFILES"

.SH "MULTIHOST CONFIGURATION"
.SH "ENVIRONMENT"
.IP HETHOST
This variable can hold host ID in multi\-host configuration, which should be used instead of automatically detected.
.IP HETPROFILE
This variable can hold configuration profile name, which should be used instead of automatically detected.
.SH "BUGS"
.TP 
Some kernels have problems with many VLAN interfaces.
.TP 
teql interfaces can't be safely renamed.
.TP 
VLAN interfaces sometimes are initialized into wrong state.
.TP 
Some network drivers have race condition in interface init code.
.TP 
ppp interfaces can only be named ppp%d.
.TP 
SkyStar DVB interfaces can only be named dvb*.
.TP 
DHCP does not work for bonding.
.TP 
ppp option 'demand' can hang /etc/net startup forever
.TP 
CONFIG_IPV6 must be on to configure 6-to-4 (TYPE=iptun, TUNTYPE=sit) tunnels correctly
.SH "SEE ALSO"
.BR ip (8),
.BR tc (8),
.BR ifrename (8),
.BR iftab (5)
