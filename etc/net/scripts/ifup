#!/bin/bash

# This script is intended to be run from command-line or etcnet
# initscript. It determines if the iface should be created, then
# creates the device and calls ifup-common to do the rest.
# Removable ifaces should be controlled via hotplug and pcmcia_cs,
# which will deal with ifup-removable.

usage()
{
	echo "Usage: $0 <interface>"
	exit 1
}

[ -z "$1" ] && usage
NAME=$1

. /etc/init.d/functions
SCRIPTDIR=/etc/net/scripts
SourceIfNotEmpty $SCRIPTDIR/functions
MYIFACEDIR=$IFACEDIR/$NAME
export IFACEDIR MYIFACEDIR SCRIPTDIR NAME PROFILE

init_profile
pickup_options

# 1. check constraints
is_yes "$DISABLED" && {
	echo -n 'skipped disabled iface '
  exit 1
}

if [ "$2" = "boot" ]; then
	is_no "$ONBOOT" && {
		echo -n 'skipped on boot '
	  exit 1
	}
	is_yes "$USE_HOTPLUG" && {
		echo -n 'skipped hotplug iface on boot '
	  exit 1
	}
	is_yes "$USE_PCMCIA" && {
		echo -n 'skipped PCMCIA iface on boot '
	  exit 1
	}
fi

# 2. check if device already exists
iface_is_up $NAME && {
	echo -n "'$NAME' skipped, already up "
	exit 1
}

# 3. deps control
ifup_parent || {
	print_error "Could not ifup parent '$REQUIRES' for child iface '$NAME'"
	exit 1
}

# 4. make device appear
if ExecIfExecutable $SCRIPTDIR/create-$TYPE $NAME; then
	echo -n '.'
else
	echo -n '!'
	exit 1
fi

# 5. configure iface
IFTAB_FILE=`profiled_filename $IFTAB`
[ -s "$IFTAB_FILE" ] && $IFRENAME -c "$IFTAB_FILE" -n "$NAME" >/dev/null 2>&1 && echo -n '.'
$SCRIPTDIR/ifup-common $NAME

# 6. process deps
is_yes "$RECURSIVE_IFUP" && ifup_children
