#!/bin/bash

usage()
{
	echo "Usage: $0 <device>"
	exit 1
}

[ -z "$1" ] && usage
NAME=$1

. /etc/init.d/functions
SCRIPTDIR=/etc/net/scripts
SourceIfNotEmpty $SCRIPTDIR/functions
MYIFACEDIR=$IFACEDIR/$NAME
export IFACEDIR MYIFACEDIR SCRIPTDIR NAME

pickup_options

is_yes "$DISABLED" && {
	echo -n 'skipped, disabled '
  exit 1
}

if [ "$2" = "boot" -a "$ONBOOT" = "no" ]; then
	echo -n 'skipped during boot '
  exit 1
fi

# 1. check if device already exists
iface_is_up $NAME && {
	echo -n "'$NAME' skipped, already up "
	exit 1
}

# 2. make device appear
# When called from hotplug, we already have module loaded and only
# need to continue from MAPDESCR (inclusive).
# By default skip ifaces configured to be managed by cardmgr/hotplug.

if is_yes "$USE_HOTPLUG"; then
	if [ "$IN_HOTPLUG" != "1" ]; then
		echo -n 'skipped, hotplug '
	  exit 1
	fi
fi

if is_yes "$USE_PCMCIA"; then
	if [ "$IN_PCMCIA" != "1" ]; then
		echo -n 'skipped, pcmcia '
	  exit 1
	fi
fi

# Don't call modprobe for removable devices.
if [ -z "$IN_HOTPLUG" -a -z "$IN_PCMCIA" ]; then
	if ExecIfExecutable $SCRIPTDIR/create-$TYPE $NAME; then
		echo -n '.'
	else
		echo -n '!'
		exit 1
	fi
fi

# deal with ifrename and mappings
if [ -n "$MAPDESCR" ]; then
	[ -x $IFRENAME ] || {
		print_error "$IFRENAME is unavailable, but map description is set for $NAME"
		exit 1
	}
	if (echo $NAME $MAPDESCR | $IFRENAME -c -); then
		echo -n '.'
	else
		echo -n '!'
		exit 1
	fi
fi

# 3. setup link-level params
# TODO: pickup default sysctl file?
[ -s $MYIFACEDIR/sysctl.conf ] && sysctl -p $MYIFACEDIR/sysctl.conf && echo -n '.'
[ -s $IFACEDIR/default/iplink ] && ( cat $IFACEDIR/default/iplink | xargs --max-lines=1 $IP link set dev $NAME ) && echo -n '.'
[ -s $IFACEDIR/default/iplink-$TYPE ] && ( cat $IFACEDIR/default/iplink-$TYPE | xargs --max-lines=1 $IP link set dev $NAME ) && echo -n '.'
[ -s $MYIFACEDIR/iplink ] && ( cat $MYIFACEDIR/iplink | xargs --max-lines=1 $IP link set dev $NAME ) && echo -n '.'

# 5. bring iface up
if ! is_yes $KEEP_DOWN; then
	ExecIfExecutable $SCRIPTDIR/ifup-pre-local $NAME && echo -n '.'
	ip link set dev $NAME up && echo -n '.'
	if [ -x $MYIFACEDIR/resolv.conf ]; then
		rm -f /etc/resolv.conf
		ln -s $MYIFACEDIR/resolv.conf /etc/resolv.conf
		echo -n '.'
	fi
fi

# 6. setup addresses and (only if iface is up) routes
# don't flush IPv6 auto-generated addresses
is_yes $DONT_FLUSH || {
	$IP -4 address flush dev $NAME >/dev/null 2>&1
	$IP -6 address flush dev $NAME scope host >/dev/null 2>&1
	$IP -6 address flush dev $NAME scope site >/dev/null 2>&1
	$IP -6 address flush dev $NAME scope global >/dev/null 2>&1
	echo -n '.'
}
is_yes "$CONFIG_IPV4" && ExecIfExecutable $SCRIPTDIR/config-ipv4 $NAME && echo -n '.'
is_yes "$CONFIG_IPV6" && ExecIfExecutable $SCRIPTDIR/config-ipv6 $NAME && echo -n '.'
is_yes "$CONFIG_IPX" &&  ExecIfExecutable $SCRIPTDIR/config-ipx $NAME  && echo -n '.'

# 7. type-specific additional optional configuration
ExecIfExecutable $SCRIPTDIR/setup-$TYPE $NAME && echo -n '.'

# 8. ifup-post
iface_is_up $NAME && ExecIfExecutable $SCRIPTDIR/ifup-post-local $NAME && echo -n '.'
exit 0
