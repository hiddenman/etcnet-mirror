#!/bin/bash
# Firewall script
#

# Known issues:
# 1. When interface is 'all' we can't guess right interfaces processing order
#    like etcnet does so process it by bash sort order
# 2. Guessing may not work correct
# 3. Что будет, если указано: efw rule "some rule"? оно же попадет под полный
# разбор и заглючит

# default values
NAME=default
TABLE=filter
CHAIN=
MYIFACEDIR=
TABLES="mangle filter nat"
ACTIONS="start stop restart reload flush show count rule"

usage()
{
	echo "Usage: $0 [iface] [table] [chain] <action>" >&2
	echo ""
	echo "iface  - 'default' (by default) or real interface name"
	echo "table  - 'mangle', 'filter' (by default), 'nat'"
	echo "chain  -  system or user defined chain name (case sensitive!)"
	echo "action - 'start','stop','restart','reload','flush','show','count','rule'"
	echo ""
	exit 1
}



guess_options()
{
	# Four options. Get interface name and shift
	[ $# -ge 4 ] && 
	{
		NAME="$1"
		[ "$NAME" != 'default' ] && 
		{
			[ -d $IFACEDIR/$NAME@$NETHOST ] && MYIFACEDIR=$IFACEDIR/$NAME@$NETHOST || MYIFACEDIR=$IFACEDIR/$NAME
			[ -d "$MYIFACEDIR" ] || {
				print_error "interface configuration directory '$MYIFACEDIR' not found"
				exit 1
			}
		}
		egrep -q "([^-]\b|^)$2(\b[^-]|$)" < <(echo "$TABLES") && TABLE="$2" ||
		{
			print_error "Unknown firewall table $2"
			exit 1
		}
		CHAIN="$3"
		egrep -q "([^-]\b|^)$4(\b[^-]|$)" < <(echo "$ACTIONS") && ACTION="$4" ||
		{
			print_error "Unknown firewall action $4"
			exit 1
		}
		return
	}

	# Three options. Guess first and shift
	[ $# -eq 3 ] && 
	{
			[ "$1" != 'default' ] && 
			{
				# May be it's and interface name
				[ -d $IFACEDIR/$1@$NETHOST ] && MYIFACEDIR=$IFACEDIR/$1@$NETHOST || MYIFACEDIR=$IFACEDIR/$1
				[ -d "$MYIFACEDIR" ] &&
				{
					# Yes, it's an interface name
					NAME="$1"
					egrep -q "([^-]\b|^)$2(\b[^-]|$)" < <(echo "$TABLES") && TABLE="$2" || CHAIN="$2"
				} ||
				{
					# No, it's not an interface name
					egrep -q "([^-]\b|^)$1(\b[^-]|$)" < <(echo "$TABLES") && 
					{
						TABLE="$1"
						CHAIN="$2"
					} || 
					{
						print_error "Unknown firewall table $1"
						exit 1
					}
				}
			} ||
			{
				# Yes, it's an interface name
				NAME="$1"
				egrep -q "([^-]\b|^)$2(\b[^-]|$)" < <(echo "$TABLES") && TABLE="$2" || CHAIN="$2"
			}
			shift 2
	}

	# Two options. Guest first and shift
	[ $# -eq 2 ] && 
	{
		[ "$1" != 'default' ] && 
			{
				# May be it's and interface name
				[ -d $IFACEDIR/$1@$NETHOST ] && MYIFACEDIR=$IFACEDIR/$1@$NETHOST || MYIFACEDIR=$IFACEDIR/$1
				[ -d "$MYIFACEDIR" ] &&
				{
					# Yes, it's an interface name
					NAME="$1"
				} ||
				{
					# No
					egrep -q "([^-]\b|^)$1(\b[^-]|$)" < <(echo "$TABLES") && TABLE="$1" || CHAIN="$1"
				}
			} ||
			{
				# Yes, it's an interface name
				NAME="$1"
			}
			shift
	
		}
	# One option
	[ $# -eq 1 ] &&
	{
		egrep -q "([^-]\b|^)$1(\b[^-]|$)" < <(echo "$ACTIONS") && ACTION=$1 ||
		{
			print_error "Unknown firewall action $1"
			exit 1
		}
	}
}


. ${SCRIPTDIR:=/etc/net/scripts}/functions
pickup_defaults
. ${SCRIPTDIR:=/etc/net/scripts}/functions-fw

[ -z "$NETPROFILE" ] && init_netprofile

[ -z "$CONFIG_FW" ] && {
	SourceIfNotEmpty `profiled_filename /etc/net/ifaces/default/options`
	SourceIfNotEmpty `profiled_filename /etc/net/ifaces/default/fw/options`
}

if  ! is_yes "$CONFIG_FW";  then
	print_message "Firewall is disabled"
	exit 1
fi

[ $# -lt 1 ] && usage || guess_options $@

echo "iface is $NAME"
echo "table is $TABLE"
echo "chain is $CHAIN"
echo "action is $ACTION"

exit
###
if [ -d $IFACEDIR/$NAME@$NETHOST ]; then
	MYIFACEDIR=$IFACEDIR/$NAME@$NETHOST
else
	MYIFACEDIR=$IFACEDIR/$NAME
fi

[ -d "$MYIFACEDIR" ] || {
	print_error "interface configuration directory '$MYIFACEDIR' not found"
	exit 1
}


SourceIfNotEmpty "$MYIFACEDIR/fw/options"
