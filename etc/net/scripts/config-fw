#!/bin/bash

# This script handles firewall configuration for given iface name.

usage()
{
	echo '/etc/net FireWall handler'
	echo "Usage: $0 <interface> <action>" >&2
	exit 1
}


[ -z "$1" -o -z "$2" ] && usage

NAME=$1
ACTION=$2
eval "IPV4ADDRESS=($3)"
eval "IPV6ADDRESS=($4)"

pickup_defaults
pickup_options
. ${SCRIPTDIR:=/etc/net/scripts}/functions-fw

[ -z "$NETPROFILE" ] && init_netprofile

if [ -d $IFACEDIR/$NAME@$NETHOST ]; then
    MYIFACEDIR=$IFACEDIR/$NAME@$NETHOST
else
    MYIFACEDIR=$IFACEDIR/$NAME
fi

[ -d "$MYIFACEDIR" ] ||
{
    print_error "interface configuration directory $MYIFACEDIR not found"
    exit 1
}

[ -z "$CONFIG_FW" ] && 
    {
	SourceIfNotEmpty $(profiled_filename /etc/net/ifaces/default/options)
	SourceIfNotEmpty $(profiled_filename /etc/net/ifaces/default/fw/options)
    }

is_yes "$CONFIG_FW" ||
{
    print_message "Firewall is disabled"
    exit 1
}

SourceIfNotEmpty "$MYIFACEDIR/fw/options"

for CFW_TYPE in $FW_TYPE; do
    case "$CFW_TYPE" in
        "iptables")
		    # FIXME Does iptables support only IPv4?
		    is_yes "$CONFIG_IPV4" || continue
		    [ -x "$IPTABLES" ] || 
			{
			    print_error "$IPTABLES not found. Please, install iptables package"
			    continue
			}
		    [ -d "$(profiled_filename $MYIFACEDIR/fw/$CFW_TYPE)" ] || continue
		    # Load own interface syntax if exists
		    [ "$NAME" != "default" ] && is_yes "$IPTABLES_HUMAN_SYNTAX" && 
			{
			    [ -f "$(profiled_filename $MYIFACEDIR/fw/$CFW_TYPE)/syntax" ] && [ -s "$(profiled_filename $MYIFACEDIR/fw/$CFW_TYPE)/syntax" ] && 
				{
				    IPTABLES_SYNTAX_DIR=$(profiled_filename $MYIFACEDIR/fw/$CFW_TYPE)
				    unset IPTABLES_SYNTAX IPTABLES_SED_RULES
				}
			}
		    case "$ACTION" in
			start)
				iptables_preload
				iptables_start "$NAME"
				;;
			stop)
				iptables_preload
				iptables_stop "$NAME"
				;;
			restart)
				iptables_preload
				iptables_stop "$NAME"
				iptables_start "$NAME"
				;;
			reload)
				iptables_preload
				iptables_stop "$NAME"
				iptables_start "$NAME"
				;;
			*)
				print_message "${0##*/} {start|stop|restart|reload}"
				exit 1
				;;
		    esac
		    ;;
        "ip6tables")
		    # FIXME Does ip6tables support only IPv6?
		    is_yes "$CONFIG_IPV6" || continue
		    [ -x "$IP6TABLES" ] || 
			{
			    print_error "$IP6TABLES not found. Please, install iptables-ipv6 package"
			    continue
			}
		    [ -d "$(profiled_filename $MYIFACEDIR/fw/$CFW_TYPE)" ] || continue
		    # Load own interface syntax if exists
		    [ "$NAME" != "default" ] && is_yes "$IP6TABLES_HUMAN_SYNTAX" && 
			{
			    [ -f "$(profiled_filename $MYIFACEDIR/fw/$CFW_TYPE)/syntax" ] && [ -s "$(profiled_filename $MYIFACEDIR/fw/$CFW_TYPE)/syntax" ] && 
				{
				    IP6TABLES_SYNTAX_DIR=$(profiled_filename $MYIFACEDIR/fw/$CFW_TYPE)
				    unset IP6TABLES_SYNTAX IP6TABLES_SED_RULES
				}
			}
		    case "$ACTION" in
			start)
				ip6tables_preload
				ip6tables_start "$NAME"
				;;
			stop)
				ip6tables_preload
				ip6tables_stop "$NAME"
				;;
			restart)
				ip6tables_preload
				ip6tables_stop "$NAME"
				ip6tables_start "$NAME"
				;;
			reload)
				ip6tables_preload
				ip6tables_stop "$NAME"
				ip6tables_start "$NAME"
				;;
			*)
				print_message "${0##*/} {start|stop|restart|reload}"
				exit 1
				;;
		    esac
		    ;;
	"ebtables")
		    [ -d "$(profiled_filename $MYIFACEDIR/fw/$CFW_TYPE)" ] || continue
		    [ -x "$EBTABLES" ] || 
			{
			    print_error "$EBTABLES not found. Please, install ebtables package"
			    continue
			}
		    case "$ACTION" in
		        start)
			        ebtables_start "$NAME"
			        ;;
			stop)
				ebtables_stop "$NAME"
				;;
			restart)
				ebtables_stop "$NAME"
				ebtables_start "$NAME"
				;;
			reload)
				ebtables_stop "$NAME"
				ebtables_start "$NAME"
				;;
			*)
				print_message "${0##*/} {start|stop|restart|reload}"
				exit 1
				;;
		    esac
		    ;;
		
	*)
		    print_error "Firewall type $CFW_TYPE isn't supported"
    esac
done
