#!/bin/bash

# This script performs configuration on iface prepared
# by ifup or ifup-removable. We assume that all checks
# are done yet and the only thing remaining to be done
# is to configure the iface.

usage()
{
	echo "Usage: $0 <device>"
	exit 1
}

[ -z "$1" ] && usage
NAME=$1

. /etc/init.d/functions
SCRIPTDIR=/etc/net/scripts
SourceIfNotEmpty $SCRIPTDIR/functions
MYIFACEDIR=$IFACEDIR/$NAME
export IFACEDIR MYIFACEDIR SCRIPTDIR NAME PROFILE

init_profile
pickup_options

! is_yes "$IN_IFPLUGD" && {
	# 2. handle wireless extensions
	# Dunno if $IFACEDIR/default/iwconfig can be of any use
	[ -s `profiled_filename $IFACEDIR/default/iwconfig` ] && ( egrep -v '^$|^#' `profiled_filename $IFACEDIR/default/iwconfig` | xargs --max-lines=1 $IWCONFIG $NAME ) && echo -n '.'
	[ -s `profiled_filename $MYIFACEDIR/iwconfig` ] && ( egrep -v '^$|^#' `profiled_filename $MYIFACEDIR/iwconfig` | xargs --max-lines=1 $IWCONFIG $NAME ) && echo -n '.'

	# 3. setup link-level params
	# TODO: pickup default sysctl file?
	[ -s `profiled_filename $MYIFACEDIR/sysctl.conf` ] && sysctl -p `profiled_filename $MYIFACEDIR/sysctl.conf` && echo -n '.'
	# TODO: for iplink in ...
	[ -s `profiled_filename $IFACEDIR/default/iplink` ] && ( egrep -v '^$|^#' `profiled_filename $IFACEDIR/default/iplink` | xargs --max-lines=1 $IP link set dev $NAME ) && echo -n '.'
	[ -s `profiled_filename $IFACEDIR/default/iplink-$TYPE` ] && ( egrep -v '^$|^#' `profiled_filename $IFACEDIR/default/iplink-$TYPE` | xargs --max-lines=1 $IP link set dev $NAME ) && echo -n '.'
	[ -s `profiled_filename $MYIFACEDIR/iplink` ] && ( egrep -v '^$|^#' `profiled_filename $MYIFACEDIR/iplink` | xargs --max-lines=1 $IP link set dev $NAME ) && echo -n '.'
}

is_yes "$USE_IFPLUGD" && ! is_yes "$IN_IFPLUGD" && exit 0
# --- Up to this line is enough for ifplugd to run at first stage.

# 5. bring iface up
if ! is_yes $KEEP_DOWN; then
	ExecIfExecutable $SCRIPTDIR/ifup-pre-local $NAME && echo -n '.'
	$IP link set dev $NAME up && echo -n '.'
	if [ -x `profiled_filename $MYIFACEDIR/resolv.conf` ]; then
		rm -f /etc/resolv.conf
		ln -s `profiled_filename $MYIFACEDIR/resolv.conf` /etc/resolv.conf
		echo -n '.'
	fi
fi

# 6. setup addresses and (only if iface is up) routes
# don't flush IPv6 auto-generated link-level addresses
is_yes $DONT_FLUSH || {
	$IP -4 address flush dev $NAME >/dev/null 2>&1
	$IP -6 address flush dev $NAME scope host >/dev/null 2>&1
	$IP -6 address flush dev $NAME scope site >/dev/null 2>&1
	$IP -6 address flush dev $NAME scope global >/dev/null 2>&1
	echo -n '.'
}
is_yes "$CONFIG_IPV4" && ExecIfExecutable $SCRIPTDIR/config-ipv4 $NAME && echo -n '.'
is_yes "$CONFIG_IPV6" && ExecIfExecutable $SCRIPTDIR/config-ipv6 $NAME && echo -n '.'
is_yes "$CONFIG_IPX" &&  ExecIfExecutable $SCRIPTDIR/config-ipx $NAME  && echo -n '.'

# 7. type-specific additional optional configuration
ExecIfExecutable $SCRIPTDIR/setup-$TYPE $NAME && echo -n '.'

# 8. ifup-post
iface_is_up $NAME && ExecIfExecutable $SCRIPTDIR/ifup-post-local $NAME && echo -n '.'

exit 0
