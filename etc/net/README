etcnet version 0.3.0

1. GENERAL INFORMATION

URL: http://pilot.org.ua/etcnet/

Supported interface types:
+ethernet (eth)
+IP tunnels (iptun)
+IPSec static tunnels (ipsectun)
+/-VLANs (vlan)
+PLIP (plip)
+bonding (bond)
+/-dummy

Supported protocols:
IPv4 (static)
IPv6 (static)

2. QUICK START
# mkdir /etc/net/ifaces/myinterface1
$ less /etc/net/ifaces/default/options
$ less /etc/net/ifaces/default/options-*
# vi /etc/net/ifaces/myinterface/options
# vi /etc/net/ifaces/myinterface/ipv4address
# vi /etc/net/ifaces/myinterface/ipv4route
...
# mkdir /etc/net/ifaces/myinterface2
...
# vi /etc/hotplug/net.agent (see /etc/net/ifaces/default/options:USE_HOTPLUG)
...
# chkconfig network off
# ln -s /etc/init.d/etcnet /etc/net/scripts/etcnet.init
# chkconfig --add etcnet
# chkconfig etcnet on
# service network stop
# rmmod <all loaded network modules>
# service etcnet start

2A. Example configuration
eth0 with 10.0.0.1/24, default route to 10.0.0.254 and route 10.0.1.0/24 through 10.0.0.253

old /etc/sysconfig/network-scripts/ifcfg-eth0:
---8<---8<---
DEVICE=eth0
BOOTPROTO=static
IPADDR=10.0.0.1
NETMASK=255.255.255.0
ONBOOT=yes
---8<---8<---

old /etc/sysconfig/network:
---8<---8<---
GATEWAY=10.0.0.254
---8<---8<---

old /etc/sysconfig/static-routes:
---8<---8<---
eth0 net 10.0.1.0 netmask 255.255.255.0 gw 10.0.0.253
---8<---8<---

old /etc/modules.conf:
---8<---8<---
alias eth0 3c59x
---8<---8<---


new /etc/net/iface/<any name>/options
---8<---8<---
# only if name is not "eth[0-9]+"
TYPE=eth
MODULE=3c59x
---8<---8<---

new /etc/net/iface/<any name>/ipv4address
---8<---8<---
10.0.0.1/24
---8<---8<---

new /etc/net/iface/<any name>/ipv4route
---8<---8<---
10.0.1.0/24 via 10.0.0.253
default via 10.0.0.254
---8<---8<---

2B. REQUIREMENTS
Get the latest wireless-utils, compile it and install
/usr/local/sbin/ifrename and /usr/local/lib/libiw.so.27
Otherwise MAPDESCR will not work.
vlan-utils24 are required to setup VLAN interfaces.
Your kernel must have CryptoAPI patch applied to setup IPSec tunnels.
When LINKDETECT is implemented, you will need ifplugstatus from
ifplugd package.
When BOOTPROTO is implemented, you will need a DHCP and (optionally)
ZCIP client.
iproute2 is a must

3. FILES
/etc/net/iface/default
There is no interface named 'default', this dir only stores default
configuration. Files:
options: default options for all interfaces
options-<TYPE>: default options for interfaces of type TYPE
Those scripts are executed only if [ -x ]:
ifup-pre-local: executed before interface is up, but after it exists
ifup-post-local: executed after the interface is completely up and running
ifdown-pre-local: executed before the interface is going to be shutdown
ifdown-post-local: executed after the interface is completely gone

/etc/net/ifaces/<IFACE>
This is interface-specific configuration. Files:
options: general and type-specific options
ipv4address: 1 IPv4 address per line
ipv4route: 1 IPv4 route per line
ipv6address: 1 IPv6 address per line
ipv6route: 1 IPv6 route per line
iplink: 1 ip link option per line
ipv4rule: 1 ip -4 rule option per line

/etc/net/scripts
etcnet.init: chkconfig initscript
functions: helper functions
options: default options

/etc/net/
options: global options and defaults
ipv4rule: ip rules startup table ('ip -4 rule add' args)
sysctl.conf: sysctl startup
vlantab: VLAN mass-configuration
iftab: interface mappings table, processed each time ifup is run

Interface groups:
0/virtual: dummy, lo (tun/tuntap?)
1/realphys (real physical): ethernet, PLIP (SLIP?)
2/hostedphys (hosted physical): VLANs, bonding
3/indeplog (independent/stateless logical): IP tunnels, IPSec tunnels, eql (vtun?)
4/deplog (dependent/statefull logical): PPP (PPtP)
Each interface has its type. Several types form a group. Groups are brought up
in a fixed order to avoid broken dependencies (say, you will not want your VLAN
interface tried to be setup before its host interface ever exists).


4. SYSTEM CONFIGURATION
4.1 Edit /etc/sysctl.conf so that it does not intersect with /etc/net/sysctl.conf
4.2 pcmcia_cs configuration
Edit /etc/pcmcia/network.opts and replace calls to /sbin/ifup and 
/sbin/ifdown to '/etc/net/scripts/ifup-removable $1 pcmcia_cs' and
'/etc/net/scripts/ifdown-removable $1 pcmcia_cs' respectively.

5. NETWORK PROFILES
A profile is a configuration superset. E.g. when a notebook boots up in
several different networks, it's desirable to select current configuration
by just one parameter. Current profile name can be set via:
 1. environment variable PROFILE (not a good idea I guess)
 2. file /etc/net/profile (file should contain just one word, e.g. "office" w/o quotes)
 3. kernel boot parameter "netprof", e.g. "LILO: linux netprof=home"
Specifying a profile does nothing by default. But if etcnet scripts know the
current profile name (e.g. "home") and look for a configuration file (e.g. "options"
and "options.home" exists, then "options.home" will be used instead of "options".
The same for ipv4address, ipv4route, ipv4rule, ipv6address, iplink and so on).

Now if you want to boot the same host in two different networks, you will most
probably have to create additional ipv4address.yourprofilename for another address
and ipv4route.yourprofilename for another default route. Same for resolv.conf,
I guess.

Next example: booting two different hosts from the same HDD (root fs). The same as
previous, but additional options.yourprofilename and iftab.yourprofilename for the
different network card.

To switch between configurations without editing /etc/net/profile one can use:
# service etcnet startwith office
# service etcnet restartwith home

6. TODO
-check REQUIRES for vlantab
-BOOTPROTOTO other than static
-LINKDETECT and ifplugd integration
+hotplug event handlers
-ppp hooks
-control
-Makefile
+ip rule
+default prefixes for ip*route/rule
-same for sysctl.conf files
-move hotplug/ifplugd to BOOTPROTO/ONBOOT?
-handle 'add' in ipv4rule in ifdown
-analyze zebra and RTPROTO ip option
-handle network mounts
-remove MAPDESCR from PLIP files
+check iplink handling
-check exit codes
+fix get_mapped_ifname
-fix ifrename patch (manpage)

7. CHANGELOG

0.3.0: network profiles framework (see section 5)
0.2.2: experimental wireless support, some fixes
0.2.1: PCMCIA now works (see above)
0.2.0:
	ip rule support
	experimental hotplug support (no time to check, but should work)
	RC: 2 for hard error, 1 for soft error
0.1.1: more docs
0.1.0: 1st public release
